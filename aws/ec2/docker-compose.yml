version: '3.1'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:ro
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      # - ./nginx-custom-config/default.conf:/etc/nginx/conf.d/default.conf:ro # Mount custom default.conf
    environment:
      - DEFAULT_HOST=workflow.workfortoken.com
    networks:
      - nginx_network
    labels:
      - com.github.nginx-proxy.nginx-proxy

  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
    volumes_from:
      - nginx-proxy
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - DEFAULT_EMAIL=info@turality.net
    networks:
      - nginx_network

  n8n:
    image: n8nio/n8n
    container_name: n8n_service
    restart: always
    ports:
      - "5678:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres_service
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=password
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin_password
      - N8N_HOST=workflow.workfortoken.com
      - N8N_PORT=443
      - N8N_PROTOCOL=https
      - N8N_PATH=/
      - N8N_SECURE_COOKIE=false
    depends_on:
      - postgres_service
    networks:
      - nginx_network

  postgres_service:
    image: postgres:13
    container_name: postgres_service
    restart: always
    environment:
      POSTGRES_DB: n8n
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - nginx_network

  adminer_service:
    image: adminer
    container_name: adminer_service
    restart: always
    ports:
      - "8080:8080"
    networks:
      - nginx_network

volumes:
  postgres-data:

networks:
  nginx_network:
